name: Attach Release Assets
on:
  workflow_dispatch:
  release:
    types: [created]  # Note: Neither create nor publish trigger if a release is drafted first.
                      #       In order of it to trigger the release needs to be published when created.

jobs:
  upload-release-assets:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: master

      # Setup Node
      - uses: actions/setup-node@v2
        with: { node-version: '14' }
      - run: cd .github/actions && npm install @octokit/action

      # Upload Artifacts as Release Assets
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |

          BB_VERSION=$(basename $GITHUB_REF)
          echo "Release Version: $BB_VERSION"
          version=$(cat VERSION)
          suffix=

          if [[ "$GITHUB_REF_NAME" != "master" ]]; then
              suffix="-$GITHUB_REF_NAME"
          fi

          artifacts=(
            bladebit-v${version}${suffix}-ubuntu-x86-64.tar.gz
            bladebit-v${version}${suffix}-centos-x86-64.tar.gz
            bladebit-v${version}${suffix}-macos-x86-64.tar.gz
            bladebit-v${version}${suffix}-windows-x86-64.zip
          )

          mkdir -p bin

          for artifact_name in "${artifacts[@]}"; do
            
            echo "Fetching $artifact_name"
            url=$(node .github/actions/artifacts.mjs get-artifact-url $artifact_name)
            
            # Download zipped artifact and unzip the contents
            response_code=$(curl -w "%{http_code}" -o "bin/${artifact_name}.zip" "$url")
            if [[ $response_code -ne 200 ]]; then
              >&2 echo "Failed to download artifact"
            fi
            unzip -d bin "bin/${artifact_name}.zip"

            # Upload artifact to release
            echo "Uploading release asset '${artifact_name}'"
            node .github/actions/artifacts.mjs upload-release-asset $BB_VERSION $artifact_name bin/$artifact_name

          done
